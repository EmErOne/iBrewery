<UserControl x:Class="IBrewery.Client.Views.AddRecipeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IBrewery.Client.Views"
             xmlns:viewmodels="clr-namespace:IBrewery.Client.ViewModels"
             xmlns:models="clr-namespace:IBrewery.Client.Models"
             xmlns:converter="clr-namespace:IBrewery.Client.Converter"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             > 
    <UserControl.Resources>
        <ObjectDataProvider x:Key="PhaseTypEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:PhaseTyp"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="IngredientTypEnum" MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:IngredientTyp"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converter:AmmountConverter x:Key="AmmountConverter" />
    </UserControl.Resources>


    <Grid Background="White">
        <Label Margin="10,0,0,0" Content="Rezept" FontSize="16" Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Top" ></Label>
        <DockPanel Margin="10,35,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Label Content="Name" FontWeight="Bold" Width="100"/>
            <TextBox Text="{Binding RecipeName, UpdateSourceTrigger=PropertyChanged}" BorderBrush="LightGray" VerticalContentAlignment="Center"/>
        </DockPanel>
        <DockPanel Height="100" Margin="10,70,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Label Content="Beschreibung" FontWeight="Bold" Width="100"/>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <TextBox Text="{Binding RecipeDescription}" BorderBrush="LightGray" TextWrapping="Wrap" AcceptsReturn="True"></TextBox>
            </ScrollViewer>
        </DockPanel>
        <ScrollViewer Margin="10,180,10,40"  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Grid  Grid.Column="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DockPanel LastChildFill="True" Grid.Row="0">
                        <Button Content=" + " Command="{Binding AddIngredientCommand}" DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="19"/>
                        <Label DockPanel.Dock="Left" HorizontalAlignment="Stretch" Content="Zutaten" FontWeight="Bold"/>
                    </DockPanel>
                    <ListBox ItemsSource="{Binding RecipeIngredients}" Grid.Row="1" BorderThickness="0" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*" MinWidth="60"/>
                                        <ColumnDefinition Width="1*" MinWidth="30"/>
                                        <ColumnDefinition Width="85"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Text="{Binding Name}" Grid.Column="0" VerticalContentAlignment="Center"/>
                                    <TextBox Text="{Binding Amount, Converter={StaticResource AmmountConverter}}" Grid.Column="1" VerticalContentAlignment="Center"/>
                                    <ComboBox SelectedItem="{Binding Typ}" Grid.Column="2" ItemsSource="{Binding Source={StaticResource IngredientTypEnum}}" VerticalContentAlignment="Center"/>

                                    <Menu Grid.Column="3" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        <MenuItem Header="..." VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="25" Height="30">
                                            <MenuItem Header="Dublizieren" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DuplicateIngredientCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/WindowsClient;component/Icons/Add-Icon.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="Löschen"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DeleteIngredientCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/WindowsClient;component/Icons/Delete-Icon.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </MenuItem>
                                    </Menu>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>
                </Grid>

                <Grid Grid.Column="1" Margin="10,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <DockPanel LastChildFill="True" Grid.Row="0">
                        <Button Content=" + " DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding AddPhaseCommand}"/>
                        <Label DockPanel.Dock="Left" HorizontalAlignment="Stretch" Content="Phasen" FontWeight="Bold"/>
                    </DockPanel>

                    <ListBox ItemsSource="{Binding RecipePhases, NotifyOnSourceUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" BorderThickness="0" HorizontalContentAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="85"/>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="55"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding Name}" Grid.Column="0" VerticalContentAlignment="Center"/>
                                    <ComboBox SelectedItem="{Binding Typ}" Grid.Column="1" ItemsSource="{Binding Source={StaticResource PhaseTypEnum}}" VerticalContentAlignment="Center"/>


                                    <Border  Grid.Column="2" BorderBrush="LightGray" BorderThickness="1">
                                        <DockPanel LastChildFill="True">
                                            <Label Content="min" DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                                <Label.Style>
                                                    <Style TargetType="Label">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Typ}" Value="{x:Static models:PhaseTyp.KeepHeat}">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                            <TextBox DockPanel.Dock="Left" Padding="5,0,0,0" HorizontalAlignment="Stretch"  VerticalContentAlignment="Center" Text="{Binding PeriodOfMinutes}" PreviewTextInput="PreviewTextInput_NumberTextBoxInputCheck" BorderThickness="0">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                        <Setter Property="Foreground" Value="Transparent"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Typ}" Value="{x:Static models:PhaseTyp.KeepHeat}">
                                                                <Setter Property="IsEnabled" Value="True"/>
                                                                <Setter Property="Foreground" Value="Black"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DockPanel>
                                    </Border>

                                    <Border  Grid.Column="3" BorderBrush="LightGray" BorderThickness="1">
                                        <DockPanel LastChildFill="True">
                                            <Label Content="°C" DockPanel.Dock="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                                            <TextBox DockPanel.Dock="Left" Padding="5,0,0,0" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Text="{Binding TargetTemperature}" PreviewTextInput="PreviewTextInput_NumberTextBoxInputCheck" BorderThickness="0"/>
                                        </DockPanel>
                                    </Border>

                                    <ComboBox Grid.Column="4" VerticalContentAlignment="Center" Padding="0" ToolTip="{Binding Path=SelectedItem.ToolTip, RelativeSource={RelativeSource Self}}" SelectedItem="{Binding PumpInterval, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnSourceUpdated=True}" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.PumpIntervals, UpdateSourceTrigger=PropertyChanged}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Label HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{Binding}" ToolTip="{Binding ToolTip}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Menu Grid.Column="5" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        <MenuItem Header="..." VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="25" Height="30">
                                            <MenuItem Header="Dublizieren" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DuplicatePhaseCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/WindowsClient;component/Icons/Add-Icon.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>

                                            <MenuItem Header="Position hoch" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.PositionUpPhaseCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Icons/Up-Icon.ico" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Position runter"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.PositionDownPhaseCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/Icons/Down-Icon.ico" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Pumpenintervall erstellen"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddPumpIntervalCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/WindowsClient;component/Icons/Settings-Icon.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="Löschen"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DeletePhaseCommand}" CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <Image Source="/WindowsClient;component/Icons/Delete-Icon.png" />
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </MenuItem>
                                    </Menu>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>
                </Grid>
            </Grid>
        </ScrollViewer>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Schließen" Click="Close_Click" VerticalAlignment="Bottom" Margin="10,0,10,10" HorizontalAlignment="Right" Width="100"/>
            <Button Content="Speichern" Command="{Binding SaveRecipeCommand}" VerticalAlignment="Bottom" Margin="0,0,10,10" HorizontalAlignment="Right" Width="100"/>
        </StackPanel>
        
    </Grid>

</UserControl>
